<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.guchiBoard.dao.PostMapper">

	<!-- id挿入 -->
	<!-- <insert id="insert" useGeneratedKeys="true" keyProperty="id"> INSERT 
		INTO post_test (id) values (#{id}) </insert> -->
	<!-- 全件検索 -->
	<resultMap id="postMap" type="com.example.guchiBoard.entity.Post" autoMapping="true">
		<id property="id" column="id" />
		<result property="tagCode" column="tag_code" />
		<result property="tag" column="tag" />
		<result property="title" column="title" />
		<result property="post" column="post" />
		<result property="createDate" column="created_date" />
		<result property="updateDate" column="updated_date" />
		<!-- javaType="ArrayList" -->
		<collection property="replyList" ofType="com.example.guchiBoard.entity.Reply" columnPrefix="reply_">
			<id property="id" column="id" />
			<result property="postId" column="post_id" />
			<result property="replyComments" column="comments" />
			<result property="createDate" column="created_date" />
			<result property="updateDate" column="updated_date" />
		</collection>
	</resultMap>

	<select id="findAll"
		resultType="com.example.guchiBoard.entity.Post" resultMap="postMap">
		SELECT
			post_test.id,
			post_test.tag_code,
			post_test.title,
			post_test.post,
			post_tags.tag,
			reply_comments.post_id as reply_post_id,
			reply_comments.comments as reply_comments,
			reply_comments.created_date as reply_created_date,
			reply_comments.updated_date as reply_updated_date
		FROM post_test
			LEFT OUTER JOIN post_tags ON post_test.tag_code = post_tags.id
			LEFT OUTER JOIN reply_comments ON post_test.id = reply_comments.post_id
		ORDER BY post_test.id
	</select>
	
	<!-- 1件検索 -->
		<resultMap id="postOneMap" type="com.example.guchiBoard.entity.Post" autoMapping="true">
		<id property="id" column="id" />
		<result property="tagCode" column="tag_code" />
		<result property="tag" column="tag" />
		<result property="title" column="title" />
		<result property="post" column="post" />
		<result property="createDate" column="created_date" />
		<result property="updateDate" column="updated_date" />
		<collection property="replyList" ofType="com.example.guchiBoard.entity.Reply" columnPrefix="reply_">
			<id property="id" column="id" />
			<result property="postId" column="post_id" />
			<result property="replyComments" column="comments" />
			<result property="createDate" column="created_date" />
			<result property="updateDate" column="updated_date" />
		</collection>
	</resultMap>

	<select id="findOne"
		resultType="com.example.guchiBoard.entity.Post" resultMap="postOneMap">
		SELECT
			post_test.id,
			post_test.tag_code,
			post_test.title,
			post_test.post,
			post_tags.tag,
			reply_comments.post_id as reply_post_id,
			reply_comments.comments as reply_comments,
			reply_comments.created_date as reply_created_date,
			reply_comments.updated_date as reply_updated_date
		FROM post_test
			LEFT OUTER JOIN post_tags ON post_test.tag_code = post_tags.id
			LEFT OUTER JOIN reply_comments ON post_test.id = reply_comments.post_id
		WHERE post_test.id = #{id}
	</select>
<!-- 	<select id="findReply"
		resultType="com.example.guchiBoard.entity.Reply" parameterType="string">
		 SELECT
		 	reply_comments.comments
		 FROM reply_comments
	</select> -->
	<!-- タグ全件検索 -->
	<select id="findtagsAll"
		resultType="com.example.guchiBoard.entity.Tags">
		SELECT * FROM post_tags
	</select>
	<!-- 新規登録 -->
	<insert id="add" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.example.guchiBoard.dto.PostForm">  <!-- parameterType="Post" -->
		INSERT INTO post_test
		<!-- (id, title, post, updated_date, created_date) VALUES (#{id}, #{title}, 
			#{post}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) -->
		(tag_code, title, post, updated_date, created_date)
		VALUES
		(#{tagCode}, #{title}, #{post},
		CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	</insert>
</mapper>